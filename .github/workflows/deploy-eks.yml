name: Deploy

on:
  pull_request:
    types: closed
    branches: main

env:
  EKS_CLUSTER: tech-challenge-38

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: sonar-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to EKS cluster
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Login to DockerHub
        run: docker login -u geter -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t geter/ponto-worker-techchallenge38:latest .
          docker push geter/ponto-worker-techchallenge38

      - name: Deploy EKS
        uses: swdotcom/update-and-apply-kubernetes-configs@v1.3
        with:
          k8-config-file-paths: |
            deployment/ponto-worker-deployment.yaml
            deployment/ponto-worker-serviceaccount.yaml
          replacement-method: defined
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          REPORT_NOTIFICATION_TOPIC_ARN: ${{ vars.REPORT_NOTIFICATION_TOPIC_ARN }}
          REGISTRY_QUEUE_NAME: ${{ vars.REGISTRY_QUEUE_NAME }}
          REPORT_QUEUE_NAME: ${{ vars.REPORT_QUEUE_NAME }}
          ENV: ${{ vars.ENV }}